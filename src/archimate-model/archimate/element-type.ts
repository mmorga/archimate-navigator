import { Layer, layerElements } from "./layers";

export enum ElementType {
  BusinessActor = "BusinessActor",
  BusinessCollaboration = "BusinessCollaboration",
  BusinessEvent = "BusinessEvent",
  BusinessFunction = "BusinessFunction",
  BusinessInteraction = "BusinessInteraction",
  BusinessInterface = "BusinessInterface",
  BusinessObject = "BusinessObject",
  BusinessProcess = "BusinessProcess",
  BusinessRole = "BusinessRole",
  BusinessService = "BusinessService",
  Contract = "Contract",
  Location = "Location",
  Product = "Product",
  Representation = "Representation",
  ApplicationCollaboration = "ApplicationCollaboration",
  ApplicationComponent = "ApplicationComponent",
  ApplicationEvent = "ApplicationEvent",
  ApplicationFunction = "ApplicationFunction",
  ApplicationInteraction = "ApplicationInteraction",
  ApplicationInterface = "ApplicationInterface",
  ApplicationProcess = "ApplicationProcess",
  ApplicationService = "ApplicationService",
  DataObject = "DataObject",
  Artifact = "Artifact",
  CommunicationNetwork = "CommunicationNetwork",
  CommunicationPath = "CommunicationPath",
  Device = "Device",
  InfrastructureFunction = "InfrastructureFunction",
  InfrastructureInterface = "InfrastructureInterface",
  InfrastructureService = "InfrastructureService",
  Network = "Network",
  Node = "Node",
  Path = "Path",
  SystemSoftware = "SystemSoftware",
  TechnologyCollaboration = "TechnologyCollaboration",
  TechnologyEvent = "TechnologyEvent",
  TechnologyFunction = "TechnologyFunction",
  TechnologyInteraction = "TechnologyInteraction",
  TechnologyInterface = "TechnologyInterface",
  TechnologyObject = "TechnologyObject",
  TechnologyProcess = "TechnologyProcess",
  TechnologyService = "TechnologyService",
  DistributionNetwork = "DistributionNetwork",
  Equipment = "Equipment",
  Facility = "Facility",
  Material = "Material",
  Assessment = "Assessment",
  Constraint = "Constraint",
  Driver = "Driver",
  Goal = "Goal",
  Meaning = "Meaning",
  Outcome = "Outcome",
  Principle = "Principle",
  Requirement = "Requirement",
  Stakeholder = "Stakeholder",
  Value = "Value",
  Deliverable = "Deliverable",
  Gap = "Gap",
  ImplementationEvent = "ImplementationEvent",
  Plateau = "Plateau",
  WorkPackage = "WorkPackage",
  AndJunction = "AndJunction",
  Junction = "Junction",
  OrJunction = "OrJunction",
  Capability = "Capability",
  CourseOfAction = "CourseOfAction",
  Resource = "Resource",
  Grouping = "Grouping",
}

export const ElementTypes: Readonly<ElementType[]> = [
  ElementType.BusinessActor,
  ElementType.BusinessCollaboration,
  ElementType.BusinessEvent,
  ElementType.BusinessFunction,
  ElementType.BusinessInteraction,
  ElementType.BusinessInterface,
  ElementType.BusinessObject,
  ElementType.BusinessProcess,
  ElementType.BusinessRole,
  ElementType.BusinessService,
  ElementType.Contract,
  ElementType.Location,
  ElementType.Product,
  ElementType.Representation,
  ElementType.ApplicationCollaboration,
  ElementType.ApplicationComponent,
  ElementType.ApplicationEvent,
  ElementType.ApplicationFunction,
  ElementType.ApplicationInteraction,
  ElementType.ApplicationInterface,
  ElementType.ApplicationProcess,
  ElementType.ApplicationService,
  ElementType.DataObject,
  ElementType.Artifact,
  ElementType.CommunicationNetwork,
  ElementType.CommunicationPath,
  ElementType.Device,
  ElementType.InfrastructureFunction,
  ElementType.InfrastructureInterface,
  ElementType.InfrastructureService,
  ElementType.Network,
  ElementType.Node,
  ElementType.Path,
  ElementType.SystemSoftware,
  ElementType.TechnologyCollaboration,
  ElementType.TechnologyEvent,
  ElementType.TechnologyFunction,
  ElementType.TechnologyInteraction,
  ElementType.TechnologyInterface,
  ElementType.TechnologyObject,
  ElementType.TechnologyProcess,
  ElementType.TechnologyService,
  ElementType.DistributionNetwork,
  ElementType.Equipment,
  ElementType.Facility,
  ElementType.Material,
  ElementType.Assessment,
  ElementType.Constraint,
  ElementType.Driver,
  ElementType.Goal,
  ElementType.Meaning,
  ElementType.Outcome,
  ElementType.Principle,
  ElementType.Requirement,
  ElementType.Stakeholder,
  ElementType.Value,
  ElementType.Deliverable,
  ElementType.Gap,
  ElementType.ImplementationEvent,
  ElementType.Plateau,
  ElementType.WorkPackage,
  ElementType.AndJunction,
  ElementType.Junction,
  ElementType.OrJunction,
  ElementType.Capability,
  ElementType.CourseOfAction,
  ElementType.Resource,
  ElementType.Grouping,
];

export const CoreElementTypes: Readonly<ElementType[]> = layerElements(
  Layer.Business,
).concat(layerElements(Layer.Application), layerElements(Layer.Technology));
export const ConnectorElementTypes: Readonly<ElementType[]> = layerElements(
  Layer.Connectors,
);
